networks:
    proxy:
      name: proxy
    backend:
      name: backend


services:
  traefik:
    image: traefik:v3.5
    container_name: traefik
    command:
      - --api.dashboard=true
      - --providers.docker.exposedbydefault=false
      - --api.insecure=true        # Aktivera Traefiks dashboard (ej för produktion)
      - --providers.docker=true    # Läs labels från Docker
      - --entrypoints.web.address=:80 # Entrypoint på port 80
      - --log.level=INFO # Styr Traefik logg: Debug, Warn, Error
      - --accesslog=true # Aktivera logg....
      # ingen filepath då när man anropar request från backend kommer det att aktivera en ny commit med ny loggstatus
    ports:
      - "80:80"
     # - "8080:8080"                  # Dashboard-kommenterat ut när det finns labels
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
     
    labels: #har lagt label här för traefik så att man kan nå det på "dashboard.localhost"
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.traefik.entrypoints=web
      - traefik.http.routers.traefik.rule=Host(`dashboard.localhost`)
      - traefik.http.services.traefik.loadbalancer.server.port=8080
    networks:
      - proxy

  frontend1:
    build: ./frontend  
    image: frontend:latest 
    container_name: frontend1
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.frontend.entrypoints=web
      - traefik.http.routers.frontend.rule=Host(`frontend.localhost`)
      - traefik.http.services.frontend.loadbalancer.server.port=5000
    volumes:
      - ./frontend:/code
    depends_on:
    - backend
   
    networks:
      - proxy


  frontend2:
    build: ./frontend  
    image: frontend:latest 
    container_name: frontend2
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.frontend.entrypoints=web
      - traefik.http.routers.frontend.rule=Host(`frontend.localhost`)
      - traefik.http.services.frontend.loadbalancer.server.port=5000
    volumes:
      - ./frontend:/code
    
    depends_on: #Ordning av container aktivering:frontend är beroende av att backend är aktiverad för att den ska aktiveras..
    - backend
   
    networks:
      - proxy
     
  frontend3:
    build: ./frontend  
    image: frontend:latest 
    container_name: frontend3
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.frontend.entrypoints=web
      - traefik.http.routers.frontend.rule=Host(`frontend.localhost`)
      - traefik.http.services.frontend.loadbalancer.server.port=5000
    volumes:
      - ./frontend:/code
    
    depends_on:
    - backend
   
    networks:
      - proxy
     
  backend:
    build: ./backend 
    image: backend:latest 
    container_name: backend
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.backend.entrypoints=web
      - traefik.http.routers.backend.rule=Host(`backend.localhost`)
      - traefik.http.services.backend.loadbalancer.server.port=5001
    volumes:
      - ./backend:/code
    depends_on: #Ordning av container aktivering:backend är beroende av att redis är aktiverad för att den ska aktiveras..
    - redis
    ports: # har angivit post för backend då det inte går att spara i C:\Windows\System32\drivers\etc\hosts med administratörsrättigheter.
    - "5001:5001"
   
    networks:
      - proxy
      - backend
     
  #Db redis container
  redis:
    image: redislabs/redismod #konto på redis
    container_name: redis-db
  
    #ports:
    #  - '6379:6379'
    networks:
     - backend #existerar i egen nätverk
  
